{"version":3,"sources":["smmodalJs.js"],"names":["overModal","SmModal","modalSettings","_this","this","_classCallCheck","modalSettingsDefault","beforeOpenVar","afterOpenVar","beforeCloseVar","afterCloseVar","modalSelector","document","querySelector","closeSelector","modalSpeed","openAnimate","closeAnimate","transitionTimingFunction","beforeOpen","afterOpen","beforeClose","afterClose","currentPadding","parseInt","window","getComputedStyle","querySelectorAll","replace","backgroundBlur","backgroundBlurValue","overlay","verticalCenter","closeEsc","sideModal","undefined","classList","add","style","alignItems","setAttribute","transition","remove","addEventListener","e","keyCode","contains","closeModal","i","length","removeEventListener","_this2","cssText","scrollIntoView","block","fixCenterOnIE","scrollbarWidth","push","setTimeout","_this3","pop","removeAttribute","ua","navigator","userAgent","toLowerCase","test","paddingTop","innerHeight","offsetHeight","documentWidth","documentElement","clientWidth","innerWidth"],"mappings":"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","file":"smmodalJs.min.js","sourcesContent":["// Класс модального окна\r\nvar overModal = [];\r\nclass SmModal {\r\n    constructor(modalSettings) {\r\n        // Стандатные настройки плагина\r\n        var modalSettingsDefault = {\r\n            closeSelector: '.modal-close',\r\n            modalSpeed: 500,\r\n            openAnimate: 'smFade',\r\n            closeAnimate: 'smFade',\r\n            transitionTimingFunction: 'ease',\r\n            backgroundBlur: false,\r\n            backgroundBlurValue: '5px',\r\n            overlay: 'background-color: rgba(0, 0, 0, 0.7)',\r\n            verticalCenter: true,\r\n            closeEsc: true,\r\n        };\r\n        // Установка пользовательских переменых экземпляра плагина\r\n        this.beforeOpenVar = false;\r\n        this.afterOpenVar = false;\r\n        this.beforeCloseVar = false;\r\n        this.afterCloseVar = false;\r\n        this.modalSelector = document.querySelector(modalSettings.modalSelector);\r\n        this.closeSelector = modalSettings.closeSelector;\r\n        this.modalSpeed = modalSettings.modalSpeed;\r\n        this.openAnimate = modalSettings.openAnimate;\r\n        this.closeAnimate = modalSettings.closeAnimate;\r\n        this.transitionTimingFunction = modalSettings.transitionTimingFunction;\r\n        this.beforeOpen = modalSettings.beforeOpen;\r\n        this.afterOpen = modalSettings.afterOpen;\r\n        this.beforeClose = modalSettings.beforeClose;\r\n        this.afterClose = modalSettings.afterClose;\r\n        this.currentPadding = parseInt(window.getComputedStyle(this.modalSelector.querySelectorAll('.sm-modal-wrap')[0])['padding-top'].replace('px', ''));\r\n        this.backgroundBlur = modalSettings.backgroundBlur;\r\n        this.backgroundBlurValue = modalSettings.backgroundBlurValue;\r\n        this.overlay = modalSettings.overlay;\r\n        this.verticalCenter = modalSettings.verticalCenter;\r\n        this.closeEsc = modalSettings.closeEsc;\r\n        this.sideModal = modalSettings.sideModal;\r\n        // Установка стандартных переменных если нету пользовательских\r\n        if (this.closeSelector === undefined) {\r\n            this.closeSelector = modalSettingsDefault.closeSelector;\r\n        }\r\n        if (this.modalSpeed === undefined) {\r\n            this.modalSpeed = modalSettingsDefault.modalSpeed;\r\n        }\r\n        if (this.openAnimate === undefined) {\r\n            this.openAnimate = modalSettingsDefault.openAnimate;\r\n        }\r\n        if (this.closeAnimate === undefined) {\r\n            this.closeAnimate = modalSettingsDefault.closeAnimate;\r\n        }\r\n        if (this.transitionTimingFunction === undefined) {\r\n            this.transitionTimingFunction = modalSettingsDefault.transitionTimingFunction;\r\n        }\r\n        if (this.backgroundBlur === undefined) {\r\n            this.backgroundBlur = modalSettingsDefault.backgroundBlur;\r\n        }\r\n        if (this.backgroundBlurValue === undefined) {\r\n            this.backgroundBlurValue = modalSettingsDefault.backgroundBlurValue;\r\n        }\r\n        if (this.overlay === undefined) {\r\n            this.overlay = modalSettingsDefault.overlay;\r\n        }\r\n        if (this.verticalCenter === undefined) {\r\n            this.verticalCenter = modalSettingsDefault.verticalCenter;\r\n        }\r\n        if (this.closeEsc === undefined) {\r\n            this.closeEsc = modalSettingsDefault.closeEsc;\r\n        }\r\n        // Боковая модалка\r\n        if (this.sideModal === 'left') {\r\n            this.modalSelector.classList.add('leftModal');\r\n        } else if (this.sideModal === 'right') {\r\n            this.modalSelector.classList.add('rightModal');          \r\n        }\r\n        // Отмена вертикального центрирования для всех браузеров кроме IE\r\n        if (this.verticalCenter === false) {\r\n            this.modalSelector.querySelectorAll('.sm-modal-wrap')[0].style.alignItems = 'flex-start';\r\n        }\r\n        // Применить стили к подложке\r\n        this.modalSelector.querySelectorAll('.sm-modal-wrap')[0].setAttribute('style', this.overlay);\r\n        // Инициализация классов анимации\r\n        this.modalSelector.style.transition = 'all 0s ' + this.transitionTimingFunction;\r\n        this.modalSelector.querySelectorAll('.sm-modal-contant')[0].style.transition = 'all 0s ' + this.transitionTimingFunction;\r\n        this.modalSelector.classList.remove(this.closeAnimate);\r\n        this.modalSelector.classList.add(this.openAnimate);   \r\n\r\n        // Закрытие при нажатии на Esc\r\n        if (this.closeEsc === true) {\r\n            document.addEventListener('keyup', (e) => {\r\n                if (e.keyCode === 27 && this.modalSelector.classList.contains('active')) { \r\n                    this.closeModal();\r\n                };\r\n            });\r\n        }\r\n        // Закрытие при клике на overlay\r\n        // this.modalSelector.removeEventListener(\"click\", function () {});\r\n        // this.modalSelector.addEventListener('click', (e) => {\r\n        //     this.modalBody = this.modalSelector.querySelectorAll('.sm-modal-body')[0];\r\n        //     this.modalWrap = this.modalSelector.querySelectorAll('.sm-modal-wrap')[0];\r\n\r\n        //     if (this.modalBody == e.target || this.modalWrap == e.target) {\r\n        //         this.closeModal();\r\n        //     }\r\n        // });\r\n\r\n        this.modalSelector.querySelectorAll('.sm-modal-overlay')[0].addEventListener('click', (e) => {\r\n            this.closeModal();\r\n        });\r\n\r\n        // Закрытие при клике на кнопку закрытия (параметр - \"closeSelector\")\r\n        for (var i = 0; i < this.modalSelector.querySelectorAll(this.closeSelector).length; i++) {\r\n            this.modalSelector.querySelectorAll(this.closeSelector)[i].removeEventListener(\"click\", function () {});\r\n            this.modalSelector.querySelectorAll(this.closeSelector)[i].addEventListener(\"click\", () => {\r\n                this.closeModal();\r\n            });\r\n        }        \r\n    }\r\n    // Метод открытия модального окна\r\n    openModal() {\r\n        // Выполнить функцию beforeOpen, если она была задана\r\n        if (this.beforeOpen !== undefined) {\r\n            this.beforeOpen();\r\n        }\r\n        // Открываем модальное окно с z-index 5000 или выше уже открытого модального окна\r\n        if (overModal.length === 0) {\r\n            this.modalSelector.style.cssText += 'z-index: 5000;';\r\n        } else {\r\n            this.modalSelector.style.cssText += 'z-index: ' + (parseInt(overModal[overModal.length - 1]) + 1) + ';';\r\n        }\r\n        // Устанавливаем сколл моадльного окна в 0\r\n        this.modalSelector.querySelectorAll('.sm-modal-wrap')[0].scrollIntoView({block: \"start\"});\r\n        // Центрируем блок модалки по вертикале на IE\r\n        if (this.verticalCenter === true) {\r\n            this.fixCenterOnIE();\r\n        }\r\n        // Включить блюр заднего фона\r\n        if (this.backgroundBlur === true) {\r\n            document.querySelectorAll(this.modalSelector)[0].style.cssText += 'backdrop-filter: blur(' + this.backgroundBlurValue + ');';\r\n        }\r\n        // Анимация появления\r\n        this.modalSelector.style.cssText += 'transition: all ' + this.modalSpeed + 'ms ' + this.transitionTimingFunction + ';';\r\n        this.modalSelector.querySelectorAll('.sm-modal-contant')[0].style.cssText = 'transition: all ' + this.modalSpeed + 'ms ' + this.transitionTimingFunction + ';';\r\n        // Открытие модалки\r\n        this.modalSelector.classList.remove(this.openAnimate);\r\n        this.modalSelector.classList.add('active');\r\n        // Срытие скролл бара body при открытии\r\n        if (overModal.length === 0) {\r\n            document.querySelector('body').style.cssText = 'overflow: hidden; padding-right: ' + scrollbarWidth() + 'px;';\r\n        }\r\n        // Модалка поверх модалки\r\n        overModal.push(window.getComputedStyle(this.modalSelector)['z-index']);        \r\n        // Выполнить функцию afterOpen, если она была задана\r\n        setTimeout(() => {\r\n            if (this.afterOpen !== undefined) {\r\n                this.afterOpen();\r\n            }\r\n        }, this.modalSpeed);\r\n    }\r\n    // Метод закрытия модального окна\r\n    closeModal() {\r\n        // Выполнить функцию beforeClose, если она была задана\r\n        if (this.beforeClose !== undefined) {\r\n            this.beforeClose();\r\n        }\r\n        overModal.pop();\r\n        // Выключить блюр заднего фона\r\n        if (this.backgroundBlur === true) {\r\n            document.querySelectorAll(this.modalSelector).style.cssText = 'backdrop-filter: blur(0px);';\r\n        }\r\n        // Закрытие модалки\r\n        this.modalSelector.classList.remove(this.openAnimate);\r\n        this.modalSelector.classList.add(this.closeAnimate);\r\n        this.modalSelector.classList.remove('active');\r\n        // Вернуть скролл бар body\r\n        setTimeout(() => {\r\n            if (overModal.length === 0) {\r\n                document.querySelector('body').removeAttribute('style');\r\n            }\r\n            this.modalSelector.style.cssText = 'transition: all 0s ' + this.transitionTimingFunction + ';';\r\n            this.modalSelector.querySelectorAll('.sm-modal-contant')[0].style.cssText = 'transition: all 0s ' + this.transitionTimingFunction + ';';\r\n            this.modalSelector.classList.remove(this.closeAnimate);\r\n            this.modalSelector.classList.add(this.openAnimate);\r\n            // Выполнить функцию afterClose, если она была задана\r\n            if (this.afterClose !== undefined) {\r\n                this.afterClose();\r\n            }\r\n        }, this.modalSpeed);\r\n    }\r\n    // Метод вертикального центрирования окна в браузере IE\r\n    fixCenterOnIE() {\r\n        // Переменные для определения браузера IE\r\n        var ua = window.navigator.userAgent.toLowerCase(),\r\n            is_ie = (/trident/gi).test(ua) || (/msie/gi).test(ua);\r\n        // Проверка на IE\r\n        if (is_ie == true) {\r\n            // Расчет необходимой величины padding-top b для центрирования\r\n            var windowHeight = window.innerHeight;            \r\n            var contentHeight = this.modalSelector.querySelectorAll('.sm-modal-contant')[0].offsetHeight;\r\n            var paddingTop = (windowHeight - contentHeight) / 2;\r\n            // Если пользовательский паддинг меньше расчетного то центрировать блок\r\n            if (this.currentPadding < paddingTop) {\r\n                this.modalSelector.querySelectorAll('.sm-modal-wrap')[0].style.cssText += 'padding: ' + paddingTop + 'px 0px;';\r\n            } else { // В противном случае не меняем паддинг и даем блоку margin-bottom для фикса нижнего отступа на IE\r\n                this.modalSelector.querySelectorAll('.sm-modal-contant')[0].style.cssText += 'margin-bottom: ' + this.currentPadding + 'px;'; //Js\r\n            }\r\n        }\r\n    }\r\n}\r\n// Функция расчета ширины скроллбара\r\nfunction scrollbarWidth() {\r\n    var documentWidth = parseInt(document.documentElement.clientWidth);\r\n    var windowsWidth = parseInt(window.innerWidth);\r\n    var scrollbarWidth = windowsWidth - documentWidth;\r\n    return scrollbarWidth;\r\n}"]}